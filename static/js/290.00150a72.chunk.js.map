{"version":3,"file":"static/js/290.00150a72.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.js","webpack://goit-react-hw-05-movies/./src/components/PageNotFound/PageNotFound.module.css?a66b","components/PageNotFound/PageNotFound.js","webpack://goit-react-hw-05-movies/./src/pages/Home/Home.module.css?1370","pages/Home/Home.js","services/API.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MovieList_list__yjDCC\",\"listItem\":\"MovieList_listItem__vOVoz\",\"listLink\":\"MovieList_listLink__EbNXd\"};","import css from './MovieList.module.css';\nimport { useLocation, Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport noImg from '../../img/noImg.jpg';\n\nconst MovieList = ({ moviesList }) => {\n  const location = useLocation();\n\n  return (\n    <ul className={css.list}>\n      {moviesList.map(movie => {\n        return (\n          <li key={movie.id} className={css.listItem}>\n            <Link\n              to={`/movies/${movie.id}`}\n              state={{ from: location }}\n              className={css.listLink}\n            >\n              {movie.poster_path && (\n                <img\n                  src={`https://www.themoviedb.org/t/p/w300_and_h450_bestv2${movie.poster_path}`}\n                  alt={movie.title}\n                  width=\"200px\"\n                />\n              )}\n              {!movie.poster_path && (\n                <img src={noImg} alt={movie.title} width=\"200px\" />\n              )}\n              <p>{movie.title}</p>\n            </Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\nexport default MovieList;\n\nMovieList.propTypes = {\n  moviesList: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      poster_path: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrap\":\"PageNotFound_wrap__P6T1h\",\"link\":\"PageNotFound_link__vvzwk\",\"pnf\":\"PageNotFound_pnf__sQLHF\"};","import { Link } from 'react-router-dom';\nimport css from './PageNotFound.module.css';\nimport pnf from '../../img/pnf.jpg';\n\nconst PageNotFound = () => {\n  return (\n    <div className={css.wrap}>\n      <img src={pnf} alt=\"404 page not found\" className={css.pnf}></img>\n      <b>\n        Sorry, the page not found. The link you followed broken or the page has\n        been removed.\n      </b>\n      <Link to=\"/\" className={css.link}>\n        Go Home\n      </Link>\n    </div>\n  );\n};\nexport default PageNotFound;\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Home_title__L087v\"};","import { onFetch } from 'services/API';\nimport { useEffect, useState } from 'react';\nimport css from './Home.module.css';\nimport Spiner from 'components/Spiner/Spiner';\nimport MovieList from 'components/MovieList/MovieList';\nimport PageNotFound from 'components/PageNotFound/PageNotFound';\n\nconst Home = () => {\n  const [films, setfilms] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    setIsLoading(true);\n    const fetchData = async () => {\n      try {\n        const data = await onFetch();\n        if (data === 0) {\n          return;\n        }\n        setfilms(data);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n\n  return (\n    <>\n      {isLoading && <Spiner wrapperStyle={{ fill: '#7b81ec' }} />}\n      {error && <PageNotFound />}\n      <h2 className={css.title}>Trending today:</h2>\n      {films.length !== 0 && <MovieList moviesList={films} />}\n    </>\n  );\n};\nexport default Home;\n","import axios from 'axios';\nconst APIkey = '34c962a38697839d2de5b0a80a471826';\n\nasync function onFetch() {\n  const resp = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${APIkey}`\n  );\n  return resp.data.results;\n}\nasync function onFetchSearch(search) {\n  const resp = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${APIkey}&query=${search}`\n  );\n\n  if (resp.status !== 200 || resp.data.total_results === 0) {\n    throw new Error();\n  } else return resp.data.results;\n}\nasync function onFetchFilm(id) {\n  const resp = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${APIkey}`\n  );\n  return resp.data;\n}\n\nasync function onFetchCast(id) {\n  const resp = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${APIkey}`\n  );\n  return resp.data.cast;\n}\n\nasync function onFetchReviews(id) {\n  const resp = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${APIkey}`\n  );\n  return resp.data.results;\n}\n\nexport { onFetch, onFetchFilm, onFetchCast, onFetchReviews, onFetchSearch };\n"],"names":["moviesList","location","useLocation","className","css","map","movie","to","id","state","from","poster_path","src","alt","title","width","noImg","pnf","useState","films","setfilms","isLoading","setIsLoading","error","setError","useEffect","fetchData","onFetch","data","Spiner","wrapperStyle","fill","PageNotFound","length","MovieList","APIkey","axios","resp","results","onFetchSearch","search","status","total_results","Error","onFetchFilm","onFetchCast","cast","onFetchReviews"],"sourceRoot":""}