{"version":3,"file":"static/js/509.0911a1b1.chunk.js","mappings":"4OACA,EAAuB,2BAAvB,EAAyD,2BAAzD,EAA4F,4B,SCmG5F,EAzFyB,WACvB,OAAwBA,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAoCF,EAAAA,EAAAA,UAAS,MAA7C,eAAOG,EAAP,KAAmBC,EAAnB,KACMC,GAAWC,EAAAA,EAAAA,MAGTC,GAAYC,EAAAA,EAAAA,MAAZD,QAiCR,OAhCAE,QAAQC,IAAIP,IAEZQ,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MAAoBC,MAAK,YAAe,IAAZC,EAAW,EAAXA,KAC1B,OAAOV,EAAcU,EACtB,KAEDC,EAAAA,EAAAA,IAAYR,GACTM,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACP,GAAqB,IAAjBA,EAAKE,QAIT,OAAOd,EAAQY,GAHbL,QAAQC,IAAI,wFAIf,IACAO,OAAM,SAAAC,GACLT,QAAQC,IAAIQ,EACb,GAaJ,GAAE,CAACX,KAGF,iCACE,SAAC,KAAD,CACEY,GAAId,EAASe,MAAQf,EAASe,MAAMC,KAAKC,SAAW,IACpDC,UAAWC,EAFb,qBAMCvB,IACC,iBAAKsB,UAAWC,EAAhB,WACE,gBACEC,IACExB,EAAKyB,YAAL,6DAC0DzB,EAAKyB,aAC3D,uIAENC,IAAI,eACJC,MAAM,WAER,iBAAKL,UAAWC,EAAhB,WACE,0BACGvB,EAAK4B,MADR,MACkB5B,EAAK6B,aAAaC,MAAM,EAAG,GAD7C,SAGA,wCAAgB9B,EAAK+B,iBACrB,sCACA,uBAAI/B,EAAKgC,YACT,oCACA,uCACA,SAAC,KAAD,CACEd,IAAIe,EAAAA,EAAAA,IAAa,wBAAyB,CAAE3B,QAAAA,IAC5CgB,UAAWC,EACXW,SAAS,EAHX,mBAOA,SAAC,KAAD,CACEhB,IAAIe,EAAAA,EAAAA,IAAa,2BAA4B,CAAE3B,QAAAA,IAC/CgB,UAAWC,EACXW,SAAS,EAHX,4BAWN,SAAC,KAAD,MAGL,C","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieDetails/MovieDetails.module.css?9ca9","components/MovieDetails/MovieDetails.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"card\":\"MovieDetails_card__KL1V6\",\"info\":\"MovieDetails_info__0TKY1\",\"links\":\"MovieDetails_links__WB7Lu\"};","import { useEffect, useState } from 'react';\nimport { onFetchFilm, onFetchGenresList } from 'services/API';\nimport {\n  Outlet,\n  useParams,\n  Link,\n  generatePath,\n  useLocation,\n} from 'react-router-dom';\nimport css from './MovieDetails.module.css';\n\nconst MovieDescription = () => {\n  const [film, setFilm] = useState(null);\n  const [genresList, setGenresList] = useState(null);\n  const location = useLocation();\n  // const [genres, setGenres] = useState('');\n\n  const { movieId } = useParams();\n  console.log(genresList);\n\n  useEffect(() => {\n    onFetchGenresList().then(({ data }) => {\n      return setGenresList(data);\n    });\n\n    onFetchFilm(movieId)\n      .then(({ data }) => {\n        if (data.results === 0) {\n          console.log('нема відпоівіді');\n          return;\n        }\n        return setFilm(data);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n\n    // genresList.forEach(({ name, id }) => {\n    //   if (film.genre_ids.includes(id)) {\n    //     console.log('includes such genre');\n    //     // setGenres(name);\n    //     // if (genre_ids.length > 2) {\n    //     //   genre_ids.splice(2, genre_ids.length - 1, 'Other');\n    //     // }\n    //     film.genre_ids.splice(film.genre_ids.indexOf(id), 1, name);\n    //   }\n    //   setGenres(film.genre_ids.join(', '));\n    // });\n  }, [movieId]);\n\n  return (\n    <>\n      <Link\n        to={location.state ? location.state.from.pathname : '/'}\n        className={css.links}\n      >\n        Go back\n      </Link>\n      {film && (\n        <div className={css.card}>\n          <img\n            src={\n              film.poster_path\n                ? `https://www.themoviedb.org/t/p/w300_and_h450_bestv2${film.poster_path}`\n                : 'https://upload.wikimedia.org/wikipedia/commons/thumb/6/65/No-Image-Placeholder.svg/495px-No-Image-Placeholder.svg.png?20200912122019'\n            }\n            alt=\"movie poster\"\n            width=\"300px\"\n          ></img>\n          <div className={css.info}>\n            <h2>\n              {film.title} ( {film.release_date.slice(0, 4)} )\n            </h2>\n            <p>User score: {film.vote_average}</p>\n            <h3>Overview</h3>\n            <p>{film.overview}</p>\n            <h4>Genres</h4>\n            <p>GenresList</p>\n            <Link\n              to={generatePath('/movies/:movieId/cast', { movieId })}\n              className={css.links}\n              replace={true}\n            >\n              Cast\n            </Link>\n            <Link\n              to={generatePath('/movies/:movieId/reviews', { movieId })}\n              className={css.links}\n              replace={true}\n            >\n              Reviews\n            </Link>\n          </div>\n        </div>\n      )}\n\n      <Outlet />\n    </>\n  );\n};\nexport default MovieDescription;\n"],"names":["useState","film","setFilm","genresList","setGenresList","location","useLocation","movieId","useParams","console","log","useEffect","onFetchGenresList","then","data","onFetchFilm","results","catch","error","to","state","from","pathname","className","css","src","poster_path","alt","width","title","release_date","slice","vote_average","overview","generatePath","replace"],"sourceRoot":""}