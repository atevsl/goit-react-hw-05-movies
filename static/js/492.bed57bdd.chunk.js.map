{"version":3,"file":"static/js/492.bed57bdd.chunk.js","mappings":"gMACA,EAA4B,8BAA5B,EAAwE,gC,SCmBxE,EAlBmB,SAAC,GAAiD,IAA/CA,EAA8C,EAA9CA,eAAgBC,EAA8B,EAA9BA,gBAAiBC,EAAa,EAAbA,OACrD,OACE,+BACE,kBAAMC,SAAUF,EAAhB,WACE,kBACEG,MAAOF,GAAU,GACjBG,KAAK,OACLC,KAAK,SACLC,SAAUP,EACVQ,UAAWC,KAEb,mBAAQJ,KAAK,SAASG,UAAWC,EAAjC,wBAMP,E,uEClBD,EAAuB,qBAAvB,EAAuD,yBAAvD,EAA2F,yBCkF3F,EA1Ee,WACb,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOR,EAAP,KAAeS,EAAf,KACA,GAAwCD,EAAAA,EAAAA,UAAS,MAAjD,eAAOE,EAAP,KAAqBC,EAArB,KACA,GAA8BH,EAAAA,EAAAA,WAAS,GAAvC,eAAOI,EAAP,KAAgBC,EAAhB,KACMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEAC,QAAQC,IAAIH,GA2BZ,OACE,iCACE,SAAC,EAAD,CACEnB,eA7BiB,SAAAuB,GACrBZ,EAAUY,EAAEC,cAAcpB,MAC3B,EA4BKH,gBA1BkB,SAAAsB,GAGtB,GAFAA,EAAEE,iBACFV,GAAW,GACW,KAAlBb,EAAOwB,OAGT,OAFAb,EAAgB,IAChBE,GAAW,GACJY,IAAAA,OAAAA,QAAwB,sCAEjCC,EAAAA,EAAAA,IAAc1B,GAAQ2B,MAAK,YAAe,IAAZC,EAAW,EAAXA,KAC5B,GAA2B,IAAvBA,EAAKC,cAGP,OAFAlB,EAAgB,IAChBE,GAAW,GACJY,IAAAA,OAAAA,QACL,qEAGJP,EAAgB,CAAEY,MAAO9B,IACzBW,EAAgBiB,EAAKG,SACrBlB,GAAW,EACZ,IACDJ,EAAU,GACX,EAMKT,OAAQA,IAETY,IAAW,SAACoB,EAAA,EAAD,CAAQC,aAAc,CAAEC,KAAM,cAC1C,eAAI5B,UAAWC,EAAf,SACGG,GACCA,EAAayB,KAAI,SAAAC,GACf,OACE,eAAkB9B,UAAWC,EAA7B,UACE,UAAC,KAAD,CACE8B,IAAIC,EAAAA,EAAAA,IAAa,mBAAoB,CACnCC,QAASH,EAAKI,KAEhBC,MAAO,CAAEC,KAAM5B,GACfR,UAAWC,EALb,UAOG,KACD,gBACEoC,IACEP,EAAKQ,YAAL,6DAC0DR,EAAKQ,aAC3D,uIAENC,IAAI,eACJC,MAAM,WAER,uBAAIV,EAAKW,YAlBJX,EAAKI,GAsBjB,OAEL,SAAC,KAAD,MAGL,C","sources":["webpack://goit-react-hw-05-movies/./src/components/SearchForm/SearchForm.module.css?d6f1","components/SearchForm/SearchForm.js","webpack://goit-react-hw-05-movies/./src/pages/Movies.module.css?d157","pages/Movies.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"searchBtn\":\"SearchForm_searchBtn__rp2a7\",\"searchInput\":\"SearchForm_searchInput__h6REp\"};","import css from './SearchForm.module.css';\n\nconst SearchForm = ({ onInputHendler, onSubmitHendler, search }) => {\n  return (\n    <>\n      <form onSubmit={onSubmitHendler}>\n        <input\n          value={search || ''}\n          type=\"text\"\n          name=\"search\"\n          onChange={onInputHendler}\n          className={css.searchInput}\n        />\n        <button type=\"submit\" className={css.searchBtn}>\n          Search\n        </button>\n      </form>\n    </>\n  );\n};\nexport default SearchForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Movies_list__pLFBP\",\"listItem\":\"Movies_listItem__YcYJo\",\"listLink\":\"Movies_listLink__YwdiD\"};","import SearchForm from 'components/SearchForm/SearchForm';\nimport { Outlet, useSearchParams } from 'react-router-dom';\nimport { onFetchSearch } from 'services/API';\nimport { useState } from 'react';\nimport Spiner from 'components/Spiner/Spiner';\nimport Notiflix from 'notiflix';\nimport { generatePath, Link, useLocation } from 'react-router-dom';\nimport css from './Movies.module.css';\n\nconst Movies = () => {\n  const [search, setSearch] = useState('');\n  const [searchMovies, setSearchMovies] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  // const query = searchParams.get('query');\n  console.log(searchParams);\n  const onInputHendler = e => {\n    setSearch(e.currentTarget.value);\n  };\n\n  const onSubmitHendler = e => {\n    e.preventDefault();\n    setLoading(true);\n    if (search.trim() === '') {\n      setSearchMovies([]);\n      setLoading(false);\n      return Notiflix.Notify.failure('Please type search and try again.');\n    }\n    onFetchSearch(search).then(({ data }) => {\n      if (data.total_results === 0) {\n        setSearchMovies([]);\n        setLoading(false);\n        return Notiflix.Notify.failure(\n          'Sorry, we cant find such movie. Please type search and try again.'\n        );\n      }\n      setSearchParams({ query: search });\n      setSearchMovies(data.results);\n      setLoading(false);\n    });\n    setSearch('');\n  };\n  return (\n    <>\n      <SearchForm\n        onInputHendler={onInputHendler}\n        onSubmitHendler={onSubmitHendler}\n        search={search}\n      />\n      {loading && <Spiner wrapperStyle={{ fill: '#7b81ec' }} />}\n      <ul className={css.list}>\n        {searchMovies &&\n          searchMovies.map(item => {\n            return (\n              <li key={item.id} className={css.listItem}>\n                <Link\n                  to={generatePath('/movies/:movieId', {\n                    movieId: item.id,\n                  })}\n                  state={{ from: location }}\n                  className={css.listLink}\n                >\n                  {' '}\n                  <img\n                    src={\n                      item.poster_path\n                        ? `https://www.themoviedb.org/t/p/w300_and_h450_bestv2${item.poster_path}`\n                        : 'https://upload.wikimedia.org/wikipedia/commons/thumb/6/65/No-Image-Placeholder.svg/495px-No-Image-Placeholder.svg.png?20200912122019'\n                    }\n                    alt=\"movie poster\"\n                    width=\"200px\"\n                  ></img>\n                  <p>{item.title}</p>\n                </Link>\n              </li>\n            );\n          })}\n      </ul>\n      <Outlet />\n    </>\n  );\n};\nexport default Movies;\n"],"names":["onInputHendler","onSubmitHendler","search","onSubmit","value","type","name","onChange","className","css","useState","setSearch","searchMovies","setSearchMovies","loading","setLoading","location","useLocation","useSearchParams","searchParams","setSearchParams","console","log","e","currentTarget","preventDefault","trim","Notiflix","onFetchSearch","then","data","total_results","query","results","Spiner","wrapperStyle","fill","map","item","to","generatePath","movieId","id","state","from","src","poster_path","alt","width","title"],"sourceRoot":""}