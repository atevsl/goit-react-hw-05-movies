{"version":3,"file":"static/js/495.d2f06f24.chunk.js","mappings":"mMACA,EAAuB,2BAAvB,EAAyD,2BAAzD,EAA0F,0B,kBCiB1F,EAdqB,WACnB,OACE,iBAAKA,UAAWC,EAAhB,WACE,gBAAKC,IAAKC,EAAKC,IAAI,qBAAqBJ,UAAWC,KACnD,kHAIA,SAAC,KAAD,CAAMI,GAAG,IAAIL,UAAWC,EAAxB,uBAKL,C,sIChBD,EAA2B,uBAA3B,EAA6D,uB,oCC6D7D,EAtDa,WACX,IAAQK,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,IAAnC,eAAOK,EAAP,KAAcC,EAAd,KAoBA,OAlBAC,EAAAA,EAAAA,YAAU,WACRH,GAAa,GACb,IAAMI,EAAS,mCAAG,8GAEKC,EAAAA,EAAAA,IAAYX,GAFjB,UAGD,KADPY,EAFQ,yDAMdR,EAAQQ,GANM,gDAQdJ,EAAS,EAAD,IARM,yBAUdF,GAAa,GAVC,4EAAH,qDAafI,GACD,GAAE,CAACV,KAGF,gCACGK,IAAa,SAACQ,EAAA,EAAD,CAAQC,aAAc,CAAEC,KAAM,aAC3CR,IAAS,SAACS,EAAA,QAAD,IACO,IAAhBb,EAAKc,SAAgB,4DACtB,eAAIvB,UAAWC,EAAf,SACGQ,EAAKe,KAAI,SAAAC,GACR,OACE,gBAAuBzB,UAAWC,EAAlC,UACGwB,EAAKC,eACJ,gBACExB,IAAG,6DAAwDuB,EAAKC,cAChEtB,IAAKqB,EAAKE,KACVC,MAAM,WAGRH,EAAKC,eACL,gBAAKxB,IAAK2B,EAAOzB,IAAKqB,EAAKE,KAAMC,MAAM,WAEzC,wBACE,uBAAIH,EAAKE,UAEX,uCAAeF,EAAKK,eAdbL,EAAKM,QAiBjB,QAIR,C","sources":["webpack://goit-react-hw-05-movies/./src/components/PageNotFound/PageNotFound.module.css?a66b","components/PageNotFound/PageNotFound.js","webpack://goit-react-hw-05-movies/./src/pages/Cast/Cast.module.css?cfbb","pages/Cast/Cast.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrap\":\"PageNotFound_wrap__P6T1h\",\"link\":\"PageNotFound_link__vvzwk\",\"pnf\":\"PageNotFound_pnf__sQLHF\"};","import { Link } from 'react-router-dom';\nimport css from './PageNotFound.module.css';\nimport pnf from '../../img/pnf.jpg';\n\nconst PageNotFound = () => {\n  return (\n    <div className={css.wrap}>\n      <img src={pnf} alt=\"404 page not found\" className={css.pnf}></img>\n      <b>\n        Sorry, the page not found. The link you followed broken or the page has\n        been removed.\n      </b>\n      <Link to=\"/\" className={css.link}>\n        Go Home\n      </Link>\n    </div>\n  );\n};\nexport default PageNotFound;\n","// extracted by mini-css-extract-plugin\nexport default {\"castList\":\"Cast_castList__hbalY\",\"castItem\":\"Cast_castItem__XA6Qz\"};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { onFetchCast } from 'services/API';\nimport css from './Cast.module.css';\nimport noImg from '../../img/noImg.jpg';\nimport Spiner from 'components/Spiner/Spiner';\nimport PageNotFound from 'components/PageNotFound/PageNotFound';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    setIsLoading(true);\n    const fetchCast = async () => {\n      try {\n        const data = await onFetchCast(movieId);\n        if (data === 0) {\n          return;\n        }\n        setCast(data);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchCast();\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading && <Spiner wrapperStyle={{ fill: '#7b81ec' }} />}\n      {error && <PageNotFound />}\n      {cast.length === 0 && <b>Sorry we couldn't find the cast</b>}\n      <ul className={css.castList}>\n        {cast.map(item => {\n          return (\n            <li key={item.cast_id} className={css.castItem}>\n              {item.profile_path && (\n                <img\n                  src={`https://www.themoviedb.org/t/p/w300_and_h450_bestv2${item.profile_path}`}\n                  alt={item.name}\n                  width=\"200px\"\n                />\n              )}\n              {!item.profile_path && (\n                <img src={noImg} alt={item.name} width=\"200px\" />\n              )}\n              <p>\n                <b>{item.name}</b>\n              </p>\n              <p>Character: {item.character}</p>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\nexport default Cast;\n"],"names":["className","css","src","pnf","alt","to","movieId","useParams","useState","cast","setCast","isLoading","setIsLoading","error","setError","useEffect","fetchCast","onFetchCast","data","Spiner","wrapperStyle","fill","PageNotFound","length","map","item","profile_path","name","width","noImg","character","cast_id"],"sourceRoot":""}