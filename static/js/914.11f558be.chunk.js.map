{"version":3,"file":"static/js/914.11f558be.chunk.js","mappings":"mMACA,EAAuB,2BAAvB,EAAyD,2BAAzD,EAA0F,0B,kBCiB1F,EAdqB,WACnB,OACE,iBAAKA,UAAWC,EAAhB,WACE,gBAAKC,IAAKC,EAAKC,IAAI,qBAAqBJ,UAAWC,KACnD,kHAIA,SAAC,KAAD,CAAMI,GAAG,IAAIL,UAAWC,EAAxB,uBAKL,C,8IChBD,EAAuB,2BAAvB,EAAyD,2BAAzD,EAA4F,4B,oCCgF5F,EAzEyB,WAAO,IAAD,IAC7B,GAAwBK,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KAEMC,EAAM,qBADKC,EAAAA,EAAAA,MACOC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAC/BC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAkCP,EAAAA,EAAAA,WAAS,GAA3C,eAAOS,EAAP,KAAkBC,EAAlB,KACA,GAA0BV,EAAAA,EAAAA,UAAS,IAAnC,eAAOW,EAAP,KAAcC,EAAd,MAEAC,EAAAA,EAAAA,YAAU,WACRH,GAAa,GACb,IAAMI,EAAS,mCAAG,8GAEKC,EAAAA,EAAAA,IAAYR,GAFjB,UAGD,KADPS,EAFQ,yDAMdd,EAAQc,GANM,gDAQdJ,EAAS,EAAD,IARM,yBAUdF,GAAa,GAVC,4EAAH,qDAafI,GACD,GAAE,CAACP,IAEJ,IAAMU,EAAchB,EAChBA,EAAKiB,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,MAC1C,GAEJ,OACE,gCACGX,IAAS,SAACY,EAAA,QAAD,KAEV,SAAC,KAAD,CAAMxB,GAAII,EAAQT,UAAWC,EAA7B,qBAGCc,IAAa,SAACe,EAAA,EAAD,CAAQC,aAAc,CAAEC,KAAM,aAC3CzB,IACC,iBAAKP,UAAWC,EAAhB,UACGM,EAAK0B,cACJ,gBACE/B,IAAG,6DAAwDK,EAAK0B,aAChE7B,IAAKG,EAAK2B,MACVC,MAAM,WAGR5B,EAAK0B,cACL,gBAAK/B,IAAKkC,EAAOhC,IAAKG,EAAK2B,MAAOC,MAAM,WAE1C,iBAAKnC,UAAWC,EAAhB,WACE,0BACGM,EAAK2B,MADR,MACkB3B,EAAK8B,aAAaC,MAAM,EAAG,GAD7C,SAGA,wCAAgB/B,EAAKgC,iBACrB,sCACA,uBAAIhC,EAAKiC,YACT,oCACA,uBAAIjB,KACJ,SAAC,KAAD,CAAMlB,GAAG,OAAOL,UAAWC,EAAWU,MAAO,CAAEC,KAAMH,GAArD,mBAGA,SAAC,KAAD,CAAMJ,GAAG,UAAUL,UAAWC,EAAWU,MAAO,CAAEC,KAAMH,GAAxD,4BAON,SAAC,KAAD,MAGL,C","sources":["webpack://goit-react-hw-05-movies/./src/components/PageNotFound/PageNotFound.module.css?a66b","components/PageNotFound/PageNotFound.js","webpack://goit-react-hw-05-movies/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrap\":\"PageNotFound_wrap__P6T1h\",\"link\":\"PageNotFound_link__vvzwk\",\"pnf\":\"PageNotFound_pnf__sQLHF\"};","import { Link } from 'react-router-dom';\nimport css from './PageNotFound.module.css';\nimport pnf from '../../img/pnf.jpg';\n\nconst PageNotFound = () => {\n  return (\n    <div className={css.wrap}>\n      <img src={pnf} alt=\"404 page not found\" className={css.pnf}></img>\n      <b>\n        Sorry, the page not found. The link you followed broken or the page has\n        been removed.\n      </b>\n      <Link to=\"/\" className={css.link}>\n        Go Home\n      </Link>\n    </div>\n  );\n};\nexport default PageNotFound;\n","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"MovieDetails_card__pqAte\",\"info\":\"MovieDetails_info__qv2SI\",\"links\":\"MovieDetails_links__EzCWB\"};","import { useEffect, useState } from 'react';\nimport { onFetchFilm } from 'services/API';\nimport { Outlet, useParams, Link, useLocation } from 'react-router-dom';\nimport css from './MovieDetails.module.css';\nimport noImg from '../../img/noImg.jpg';\nimport Spiner from 'components/Spiner/Spiner';\nimport PageNotFound from 'components/PageNotFound/PageNotFound';\n\nconst MovieDescription = () => {\n  const [film, setFilm] = useState(null);\n  const location = useLocation();\n  const goBack = location.state?.from ?? '/';\n  const { movieId } = useParams();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    setIsLoading(true);\n    const fetchData = async () => {\n      try {\n        const data = await onFetchFilm(movieId);\n        if (data === 0) {\n          return;\n        }\n        setFilm(data);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, [movieId]);\n\n  const genresNames = film\n    ? film.genres.map(genre => genre.name).join(', ')\n    : '';\n\n  return (\n    <>\n      {error && <PageNotFound />}\n\n      <Link to={goBack} className={css.links}>\n        Go back\n      </Link>\n      {isLoading && <Spiner wrapperStyle={{ fill: '#7b81ec' }} />}\n      {film && (\n        <div className={css.card}>\n          {film.poster_path && (\n            <img\n              src={`https://www.themoviedb.org/t/p/w300_and_h450_bestv2${film.poster_path}`}\n              alt={film.title}\n              width=\"400px\"\n            />\n          )}\n          {!film.poster_path && (\n            <img src={noImg} alt={film.title} width=\"400px\" />\n          )}\n          <div className={css.info}>\n            <h2>\n              {film.title} ( {film.release_date.slice(0, 4)} )\n            </h2>\n            <p>User score: {film.vote_average}</p>\n            <h3>Overview</h3>\n            <p>{film.overview}</p>\n            <h4>Genres</h4>\n            <p>{genresNames}</p>\n            <Link to=\"cast\" className={css.links} state={{ from: goBack }}>\n              Cast\n            </Link>\n            <Link to=\"reviews\" className={css.links} state={{ from: goBack }}>\n              Reviews\n            </Link>\n          </div>\n        </div>\n      )}\n\n      <Outlet />\n    </>\n  );\n};\nexport default MovieDescription;\n"],"names":["className","css","src","pnf","alt","to","useState","film","setFilm","goBack","useLocation","state","from","movieId","useParams","isLoading","setIsLoading","error","setError","useEffect","fetchData","onFetchFilm","data","genresNames","genres","map","genre","name","join","PageNotFound","Spiner","wrapperStyle","fill","poster_path","title","width","noImg","release_date","slice","vote_average","overview"],"sourceRoot":""}